title: "Install Node.js and ``npm``"
edition: node
ref: install-node
action:
  - title: 'OS X/Windows'
    level: 4
    content: |
      Download the installer from `<http://nodejs.org/download/>`_ and
      run to install Node.js and ``npm``.
  - title: "Other supported platforms"
    content:
      "Download the Node.js and ``npm`` binaries from `<http://nodejs.org/download/>`_."
post: |
  Ensure the installed Node.js and ``npm`` are in the appropriate path.
---
title: "Install MongoDB Node.js Driver"
edition: node
ref: install-mongodb-node
pre: |
  Use ``npm`` to install the MongoDB Node.js driver.
action:
  language: sh
  code: |
    npm install mongodb
---
title: "Declare MongoClient variable and other variables."
edition: node
ref: create-node-file
pre: |
  Complete the remainder of this procedure in a ``node`` interactive
  shell or other environment (e.g. script).
action:
  - language: javascript
    code: |
      var MongoClient = require('mongodb').MongoClient;
      var assert = require('assert');
  - pre: |
      Connect using the ``MongoClient`` to a running
      :program:`mongod` instance by specifying the :manual:`MongoDB uri
      </reference/connection-string>`. For example, the following code
      connects to a MongoDB instance that runs on the ``localhost``
      interface on port ``27017`` and switch to the ``test`` database.
    language: javascript
    code: |
      var url = 'mongodb://localhost:27017/test';
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);
        console.log("Connected correctly to server.");
        db.close();
      });
  - pre: |
      A successful connection should print out the following line:
    language: sh
    code: |
      Connected correctly to server.
    post: |
      Otherwise, the code throws an assertion.
...
