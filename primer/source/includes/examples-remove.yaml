collection: "restaurants"
options:
  show_title: False
  show_collection: False
edition:
  - shell
  - python
  - node
  - cpp
  - java
  - csharp
ref: example-collection
---
edition: shell
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  language: javascript
  code: |
    db.restaurants.remove( { "borough": "Manhattan" } )
post: |
  The remove operation returns a :method:`WriteResult` object which
  contains the status of the operation. :data:`~WriteResult.nRemoved`
  field specifies the number of documents removed.
---
edition: shell
source:
  file: examples-remove-base.yaml
  ref: _remove-justOne
ref: remove-justOne
operation:
  - language: javascript
    code: |
      db.restaurants.remove( { "borough": "Queens" }, { justOne: true } )
post: |
  Successful operation should return the following
  :method:`WriteResult` object.
results: |
  WriteResult({ "nRemoved" : 1 })
final: |
  :data:`~WriteResult.nRemoved` field specifies the number of documents
  removed, in this case ``1``.
replacement:
  removeMethod: :method:`~db.collection.remove()`
---
edition: shell
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
operation:
  language: javascript
  code: |
    db.restaurants.remove( { } )
post: |
  The remove operation returns a :method:`WriteResult` object which
  contains the status of the operation. :data:`~WriteResult.nRemoved`
  field specifies the number of documents removed.
replacement:
  removeMethod: :method:`~db.collection.remove()`
---
edition: shell
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  language: javascript
  code: |
     db.restaurants.drop()
post: |
   Upon successful drop of the collection, the operation returns
   ``true``.
results:
  - 'true'
final: |
  If the collection to drop does not exist, the operation
  will return ``false``.
replacement:
  dropMethod: :method:`~db.collection.drop()`
---
edition: python
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  - language: python
    code: |
      result = db.restaurants.delete_many({"borough": "Manhattan"})
    post: |
      The operation returns a :py:class:`~pymongo.results.DeleteResult`
      which reports the number of documents removed.
  - pre: |
      To see the number of documents deleted, access the
      :py:attr:`~pymongo.results.DeleteResult.deleted_count` attribute
      of the returned :py:class:`~pymongo.results.DeleteResult` object.
    language: python
    code: |
       result.deleted_count
  - pre: |
       The :py:attr:`~pymongo.results.DeleteResult.deleted_count` is:
    language: python
    code: |
       10259
    post: |
       If you have inserted or updated documents, such as specified in
       the Insert Data or Update Data sections of the Getting Started
       guide, your count may differ.
replacement:
  removeMethod: :py:meth:`~pymongo.collection.Collection.delete_many`
---
edition: python
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
operation:
  - language: python
    code: |
      result = db.restaurants.delete_many({})
    post: |
      The operation returns a :py:class:`~pymongo.results.DeleteResult` which
      reports the number of documents removed.
  - pre: |
      To see the number of documents deleted, access the
      :py:attr:`~pymongo.results.DeleteResult.deleted_count` attribute
      of the returned :py:class:`~pymongo.results.DeleteResult` object.
    language: python
    code: |
       result.deleted_count
  - pre: |
       The :py:attr:`~pymongo.results.DeleteResult.deleted_count` is:
    language: python
    code: |
       15100
    post: |
       If you have inserted or updated documents, such as specified in
       the Insert Data or Update Data sections of the Getting Started
       guide, your count may differ.
replacement:
  removeMethod: :py:meth:`~pymongo.collection.Collection.delete_many`
---
edition: python
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  language: python
  code: |
     db.restaurants.drop()
replacement:
  dropMethod: :py:meth:`~pymongo.collection.Collection.drop`
---
edition: node
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  - pre: |
      Define a ``removeRestaurants`` function as follows:
    language: javascript
    code: |
      var removeRestaurants = function(db, callback) {
         db.collection('restaurants').deleteMany( 
            { "borough": "Manhattan" },
            function(err, results) {
               console.log(results);
               callback();
            }
         );
      };
  - pre: |
      Call the ``removeRestaurants`` function.
    language: javascript
    code: | 
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);

        removeRestaurants(db, function() {
            db.close();
        });
      });
post: |
   The operation prints to the console the number of documents removed.
replacement:
  removeMethod: "deleteMany_"
---
edition: node
source:
  file: examples-remove-base.yaml
  ref: _remove-justOne
ref: remove-justOne
title: "Remove just one document."
operation:
  - pre: |
      Define a ``removeRestaurants`` function as follows:
    language: javascript
    code: |
      var removeRestaurants = function(db, callback) {
         db.collection('restaurants').deleteOne( 
            { "borough": "Queens" },
            function(err, results) {
               console.log(results);
               callback();
            }
         );
      };
  - pre: |
      Call the ``removeRestaurants`` function.
    language: javascript
    code: | 
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);

        removeRestaurants(db, function() {
            db.close();
        });
      });
post: |
   The operation prints to the console the number of documents removed.
replacement:
  removeMethod: "deleteOne_"
---
edition: node
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
operation:
  - pre: |
      Define a ``removeRestaurants`` function as follows:
    language: javascript
    code: |
      var removeRestaurants = function(db, callback) {
         db.collection('restaurants').deleteMany( {}, function(err, results) {
            console.log(results);
            callback();
         });
      };
  - pre: |
      Call the ``removeRestaurants`` function.
    language: javascript
    code: | 
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);

        removeRestaurants(db, function() {
            db.close();
        });
      });
post: |
   The operation prints to the console the number of documents removed.
replacement:
  removeMethod: "deleteMany_"
---
edition: node
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  - pre: |
      Define a ``dropRestaurants`` function as follows:
    language: javascript
    code: |
      var dropRestaurants = function(db, callback) {
         db.collection('restaurants').drop( function(err, response) {
            console.log(response)
            callback();
         });
      };
  - pre: |
      Call the ``dropRestaurants`` function.
    language: javascript
    code: | 
      MongoClient.connect(url, function(err, db) {
        assert.equal(null, err);

        dropRestaurants(db, function() {
            db.close();
        });
      });
post: |
   Upon successful drop of the collection, the operation prints to the
   console ``true``. If the collection to drop does not exist, the
   operation prints to the console ``false``.
replacement:
  dropMethod: "drop_"
---
edition: cpp
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  literalinclude: includes/example-cpp-remove-matching-documents.cpp
  language: cpp
---
edition: cpp
source:
  file: examples-remove-base.yaml
  ref: _remove-justOne
ref: remove-justOne
title: "Use the ``delete_one`` method."
pre: |
  Use the delete_one_ method to limit the remove operation to only
  one of the matching documents
operation:
  literalinclude: includes/example-cpp-remove-justone.cpp
  language: cpp
---
edition: cpp
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
operation:
  literalinclude: includes/example-cpp-remove-all-documents.cpp
  language: cpp
replacement:
  removeMethod: "delete_many_"
---
edition: cpp
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  literalinclude: includes/example-cpp-drop-collection.cpp
  language: cpp
replacement:
  dropMethod: "drop_"
---
edition: java
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  - literalinclude: includes/example-java-remove-matching-documents.java
    language: java
  - post: |
      .. include:: includes/example-java-remove-matching-documents-post.rst
replacement:
  removeMethod: "deleteMany_"
---
edition: java
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
operation:
  - literalinclude: includes/example-java-remove-all-documents.java
    language: java
  - post: |
      .. include:: includes/example-java-remove-all-documents-post.rst
replacement:
  removeMethod: "deleteMany_"
---
edition: java
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  literalinclude: includes/example-java-drop-collection.java
  language: java
replacement:
  dropMethod: "drop_"
---
edition: csharp
source:
  file: examples-remove-base.yaml
  ref: _remove-matching-documents
ref: remove-matching-documents
operation:
  - literalinclude: includes/example-csharp-remove-matching-documents.cs
    language: csharp
  - pre: |
      .. include:: /includes/fact-csharp-test-w-fluent-assertions.rst
  - literalinclude: includes/example-csharp-remove-matching-documents-results.rst
  - post: |
      .. include:: /includes/fact-count-discrepancies.rst
replacement:
  removeMethod: "DeleteManyAsync_"
---
edition: csharp
source:
  file: examples-remove-base.yaml
  ref: _remove-all-documents
ref: remove-all-documents
pre: |
  To remove all documents from a collection, pass an empty
  conditions document to the
  {{removeMethod}} method.
operation:
  - literalinclude: includes/example-csharp-remove-all-documents.cs
    language: csharp
  - pre: |
      .. include:: /includes/fact-csharp-test-w-fluent-assertions.rst
  - literalinclude: includes/example-csharp-remove-all-documents-results.rst
    language: csharp
  - post: |
      .. include:: /includes/fact-count-discrepancies.rst
replacement:
  removeMethod: "DeleteManyAsync_"
---
edition: csharp
source:
  file: examples-remove-base.yaml
  ref: _drop-collection
ref: drop-collection
operation:
  - literalinclude: includes/example-csharp-drop-collection.cs
    language: csharp
  - pre: |
      .. include:: /includes/fact-csharp-test-w-fluent-assertions.rst
  - literalinclude: includes/example-csharp-drop-collection-results.rst
    language: csharp
replacement:
  dropMethod: "DropCollectionAsync_"
...
