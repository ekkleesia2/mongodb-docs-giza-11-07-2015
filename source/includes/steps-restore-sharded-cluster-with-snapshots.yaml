title: Shut down the entire cluster.
stepnum: 1
ref: shutdown-cluster
pre: |
  Stop all :program:`mongos` and :program:`mongod` processes, including
  all shards *and* all config servers. To stop all members, connect to
  **each** member and issue following operations:
action:
  language: javascript
  code: |
    use admin
    db.shutdownServer()
  post: |
    For version 2.4 or earlier, use ``db.shutdownServer({force:true})``.
---
title: Restore the data files.
stepnum: 2
ref: restore
content: |
  On each server, extract the data files to the location where the
  :program:`mongod` instance will access them and restore the following:

  - Data files for each server in each shard.

    Because each production :term:`shard` is a replica set, for each
    shard, restore all the members of the replica set. See
    :doc:`/tutorial/restore-replica-set-from-backup`.

  - Data files for each config server.

  .. seealso:: :ref:`backup-restore-snapshot`
---
title: Restart the config servers.
stepnum: 3
ref: restart-config-servers
pre: |
  Restart each :ref:`config server <sharding-config-server>`
  :program:`mongod` instance by issuing a command similar to the
  following for each, using values appropriate to your configuration:
action:
  language: sh
  code: |
    mongod --configsvr --dbpath /data/configdb --port 27019
---
title: "Start **one** :program:`mongos` instance."
stepnum: 4
ref: restart-one-mongos
content: |
  Start **one** :program:`mongos` instance. For the ``--configdb``,
  specify the hostnames (and port numbers) of the config servers
  started in {{step}}
replacement:
   step: "the step `Restart the config servers.`_"
---
title: "If shard hostnames have changed, update the config database."
stepnum: 5
ref: shard-hostname
content: |
   If shard hostnames **have changed**, update the :data:`~config.shards`
   collection in the :ref:`config-database` to reflect the new
   hostnames.
---
title: "Restart all the shard :program:`mongod` instances."
stepnum: 6
ref: restart-shards
---
title: "Restart the other :program:`mongos` instances."
stepnum: 7
ref: restart-mongos-instances
content: |
  Restart the remaining two :program:`mongos` instances. For the
  ``--configdb``, specify the hostnames (and port numbers) of the
  config servers started in {{step}}
replacement:
   step: "the step `Restart the config servers.`_"
---
title: "Verify that the cluster is operational."
stepnum: 8
ref: ensure
pre: |
  Connect to a :program:`mongos` instance from a :program:`mongo` shell
  and use the :method:`db.printShardingStatus()` method to ensure that
  the cluster is operational, as follows:
action:
  language: javascript
  code: |
    db.printShardingStatus()
    show collections
...
